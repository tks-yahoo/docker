name: "Test All"

on:
  workflow_dispatch:
    inputs:
      tag:
        description: ""
        required: true
        default: "0.9.0"
      module:
        description: ""
        required: true
        default: "all"

env:
  UNITY_LICENSE: "<?xml version=\"1.0\" encoding=\"UTF-8\"?><root>\n    <License id=\"Terms\">\n        <MachineBindings>\n            <Binding Key=\"1\" Value=\"576562626572264761624c65526f7578\"/>\n            <Binding Key=\"2\" Value=\"576562626572264761624c65526f7578\"/>\n        </MachineBindings>\n        <MachineID Value=\"D7nTUnjNAmtsUMcnoyrqkgIbYdM=\"/>\n        <SerialHash Value=\"2033b8ac3e6faa3742ca9f0bfae44d18f2a96b80\"/>\n        <Features>\n            <Feature Value=\"33\"/>\n            <Feature Value=\"1\"/>\n            <Feature Value=\"12\"/>\n            <Feature Value=\"2\"/>\n            <Feature Value=\"24\"/>\n            <Feature Value=\"3\"/>\n            <Feature Value=\"36\"/>\n            <Feature Value=\"17\"/>\n            <Feature Value=\"19\"/>\n            <Feature Value=\"62\"/>\n        </Features>\n        <DeveloperData Value=\"AQAAAEY0LUJHUlgtWEQ0RS1aQ1dWLUM1SlctR0RIQg==\"/>\n        <SerialMasked Value=\"F4-BGRX-XD4E-ZCWV-C5JW-XXXX\"/>\n        <StartDate Value=\"2021-02-08T00:00:00\"/>\n        <UpdateDate Value=\"2021-02-09T00:34:57\"/>\n        <InitialActivationDate Value=\"2021-02-08T00:34:56\"/>\n        <LicenseVersion Value=\"6.x\"/>\n        <ClientProvidedVersion Value=\"2018.4.30f1\"/>\n        <AlwaysOnline Value=\"false\"/>\n        <Entitlements>\n            <Entitlement Ns=\"unity_editor\" Tag=\"UnityPersonal\" Type=\"EDITOR\" ValidTo=\"9999-12-31T00:00:00\"/>\n            <Entitlement Ns=\"unity_editor\" Tag=\"DarkSkin\" Type=\"EDITOR_FEATURE\" ValidTo=\"9999-12-31T00:00:00\"/>\n        </Entitlements>\n    </License>\n<Signature xmlns=\"http://www.w3.org/2000/09/xmldsig#\"><SignedInfo><CanonicalizationMethod Algorithm=\"http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments\"/><SignatureMethod Algorithm=\"http://www.w3.org/2000/09/xmldsig#rsa-sha1\"/><Reference URI=\"#Terms\"><Transforms><Transform Algorithm=\"http://www.w3.org/2000/09/xmldsig#enveloped-signature\"/></Transforms><DigestMethod Algorithm=\"http://www.w3.org/2000/09/xmldsig#sha1\"/><DigestValue>m0Db8UK+ktnOLJBtHybkfetpcKo=</DigestValue></Reference></SignedInfo><SignatureValue>o/pUbSQAukz7+ZYAWhnA0AJbIlyyCPL7bKVEM2lVqbrXt7cyey+umkCXamuOgsWPVUKBMkXtMH8L\n5etLmD0getWIhTGhzOnDCk+gtIPfL4jMo9tkEuOCROQAXCci23VFscKcrkB+3X6h4wEOtA2APhOY\nB+wvC794o8/82ffjP79aVAi57rp3Wmzx+9pe9yMwoJuljAy2sc2tIMgdQGWVmOGBpQm3JqsidyzI\nJWG2kjnc7pDXK9pwYzXoKiqUqqrut90d+kQqRyv7MSZXR50HFqD/LI69h68b7P8Bjo3bPXOhNXGR\n9YCoemH6EkfCJxp2gIjzjWW+l2Hj2EsFQi8YXw==</SignatureValue></Signature></root>"

jobs:
  ###########################
  #      Dispatch test      #
  ###########################
  dispatch-test:
    name: "ðŸš€ Dispatch 'Test All' (${{ matrix.module }})"
    if: github.event.inputs.module == 'all'
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        module:
          - base
          - linux-il2cpp
          - windows-mono
          - mac-mono
          - ios
          - android
          - webgl
    steps:
      - name: "Setup"
        id: setup
        run: |
          skopeo list-tags docker://unityci/editor \
            | jq -r '.Tags[]' \
            | grep -v 'ubuntu' \
            | grep -e '-${{ matrix.module }}-${{ github.event.inputs.tag }}$' \
            | jq -R '.' \
            | jq -s -c '.' \
            | jq -R '.' > .tags
          echo "::set-output name=tag::`cat .tags`"
      - name: "ðŸš€ Dispatch 'Build Editor'"
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: "Test All"
          token: ${{ secrets.GH_WORKFLOW_TOKEN }}
          inputs: '{ "tag": ${{ steps.setup.outputs.tag }}, "module": "${{ matrix.module }}" }'
          ref: ${{ github.ref }}

  ###########################
  #          Test           #
  ###########################
  test:
    name: Test (${{ matrix.tag }})
    if: github.event.inputs.module != 'all'
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        tag: ${{ fromJson(github.event.inputs.tag) }}
        module:
          - ${{ github.event.inputs.module }}
    steps:
      - uses: actions/checkout@v2

      ###########################
      #      Setup to test      #
      ###########################
      - name: Setup to test
        run: |
          # For 'linux-il2cpp' module, switch the script backend to 'IL2CPP'
          if [ "${{ matrix.module }}" = "linux-il2cpp" ] ; then
            mv -f reference-project-test/ProjectSettings/ProjectSettings_il2cpp.asset reference-project-test/ProjectSettings/ProjectSettings.asset
          fi

          # Get platform for module
          if [ "${{ matrix.module }}" = "base" ] ; then
            echo 'platform=StandaloneLinux64' >> $GITHUB_ENV
          elif [ "${{ matrix.module }}" = "linux-il2cpp" ] ; then
            echo 'platform=StandaloneLinux64' >> $GITHUB_ENV
          elif [ "${{ matrix.module }}" = "windows-mono" ] ; then
            echo 'platform=StandaloneWindows64' >> $GITHUB_ENV
          elif [ "${{ matrix.module }}" = "mac-mono" ] ; then
            echo 'platform=StandaloneOSX' >> $GITHUB_ENV
          elif [ "${{ matrix.module }}" = "android" ] ; then
            echo 'platform=Android' >> $GITHUB_ENV
          elif [ "${{ matrix.module }}" = "ios" ] ; then
            echo 'platform=iOS' >> $GITHUB_ENV
          elif [ "${{ matrix.module }}" = "webgl" ] ; then
            echo 'platform=WebGL' >> $GITHUB_ENV
          fi

          # Get version from tag
          echo "version=`echo ${{ matrix.tag }} | cut -d '-' -f 1`" >> $GITHUB_ENV

      ###########################
      #          Build          #
      ###########################
      - name: Build project
        uses: game-ci/unity-builder@main
        with:
          unityVersion: ${{ env.version }}
          customImage: unityci/editor:${{ matrix.tag }}
          projectPath: reference-project-test
          targetPlatform: ${{ env.platform }}
          allowDirtyBuild: true

      ###########################
      #           Test          #
      ###########################
      - name: Test project
        uses: game-ci/unity-test-runner@main
        with:
          unityVersion: ${{ env.version }}
          customImage: unityci/editor:${{ matrix.tag }}
          projectPath: reference-project-test
          customParameters: -nographics -buildTarget ${{ env.platform }}

      ###########################
      #          Report         #
      ###########################
      - name: Report
        if: failure()
        run: |
          echo "::error::${{ matrix.tag }}"